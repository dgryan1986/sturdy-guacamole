# CompTIA Pentest+ Methodologies & Info

## Planning and Scoping - Domain 1

## Information Gathering - Domain 2
### Enumeration <br>
Types of enumeration
- Hosts
- Networks
- Domains
- Users/Groups
- Network shares
- Web pages
- Applications
- Services
- Tokens
- Social Networks

# Fingerprinting
## Banner Grabbing

# Cryptographic Inspection
## Check SSL certs (SSL 2.0, 3.0, or TLS)
Tools to automize this: 
- SSLyze

# Eavesdropping
## Wired or Wireless Networks
- In scope?
- Capture RF, WiFi, Bluetooth

# Decompiling and Debugging
### Reverse Engineering Software

# OSINT - Open Source Intelligence
### Ability of a pentester to keep up to date with latest techniques & vulnerabilities.
- Computer Emergency Response Team (CERT)
- Japans CERT 
- NIST
- Common Vuln. & Exposures (CVE) 
- Common Weakness Enumeration (CWE)
- Common Attack Pattern Enumeration & Classification (CAPEC)
- Full Disclosure list NMAP

# Vunerability Scanning
### Credentialized vs non-credentialized scans
#### Credentialized 
- Scanner uses an authorized user or admin account
- Closer to the system admins perspective
#### Non-credentialized
- Scanner doesn't have a user or admin account
- Closer to the hackers perspective

### Compliance Scan
- Used to identify vuln. that may affect compliance with regs. or policies.
- Commonly setup as a scanning template in your vuln. scanner (PCI-DSS)
- Requires both internal and external scanning to be performed

### Fragile or non-traditional systems | Factory machines, etc.
- Should we scan these?
- Should we exempt these?

### Application Scanning
#### Dynamic Analysis
- Occurs while a program is running, ran in a sandbox

#### Static Anaylysis
- Performed in a non-runtime environment
- Inspects programming code for flaws/vulnerabilities
- Line by line inspection can be performed

#### Containers
- Containers are like micro VMs
- Requires less resources than a typical VM
- Docker, Puppet, Vagrant
- If an OS vuln is found, it will apply to all containers 

### Analyzing Vuln. Scans
#### Asset Categorization
- Categorize by OS or Function
- Ideally identify high-value assets
  - Domain Controllers
  - Web Servers
  - Databases 

#### Common Themes
- Vulnerabilies 
  - Same on many hosts?
- Observations
  - Do you see the same types of OS and Apps being used net wide.
- Lack of Best Practices
  - Common misconfigurations
  - Weak Passwords
  - Poor Security Practices
  - Logging disabled    

### Tools
- QualysGuard
- OpenVAS
- Nessus
- Nikto
- Nexpose

# Preparing for Exploitation
Map Vulnerabilites <br>
Prioritize efforts for pentest<br>

#### Common Attack Techniques
Basics:
- Cross-compiling code
  - Exploits for Windows can be compiled on Linux using tools like Mingw-w64 
- Exploit mods
  - Encrypting or encoding anti-virus detections 
- Exploit chaining
  - Layering exploits
  - Bypass the firewall 
- Proof-of-concept dev.
  - New or custom exploits 
  - Create Virtual Environment 
- Social Engineering
  - Manipulating people to get info 
- Credential brute forcing
  - Attempt to crack a password or auth system 
- Dictionary attacks
  - Set username or passwords 
- Rainbow tables
  - CrackStation.net
- Deception

#### Weaknesses in Specialized Systems
Old engineering stuff like:
- ICS - Industry Control Systems
- PLC - Programmable Logic Controller
- SCADA - Supervisory Control and Data Acquisition

Mobile Devices
- Lack of updates (Android)
- Root/Jailbreak (iPhone)
- 3rd part apps
- Bluetooth, NFC, WiFi
- No Device Management

IoT
- These have super low security and you can get Malware on there easily.
- Shodan!

Embedded Devices
- ICS/SCADA 
- Cars have it

Point-of-Sale (POS)
- Used in registers in stores and rest.

Biometrics
- Fingers can be lifted off coke can
- FaceID is 20x stronger than fingerprint

Real-Time Operating Systems (RTOS)
- Usually found in embedded systems
- Security is not a concern during dev.
- Usually stripped down version of Linux
- Uses limited resources on the machine and can be subjected easily to attacks
